# #CXXR $Id$
# #CXXR 
# #CXXR This file is part of CXXR, a project to refactor the R interpreter
# #CXXR into C++.  It may consist in whole or in part of program code and
# #CXXR documentation taken from the R project itself, incorporated into
# #CXXR CXXR (and possibly MODIFIED) under the terms of the GNU General Public
# #CXXR Licence.
# #CXXR 
# #CXXR CXXR is Copyright (C) 2008-14 Andrew R. Runnalls, subject to such other
# #CXXR copyrights and copyright restrictions as may be stated below.
# #CXXR 
# #CXXR CXXR is not part of the R project, and bugs and other issues should
# #CXXR not be reported via r-bugs or other R project channels; instead refer
# #CXXR to the CXXR website.

# #
# # ${R_HOME}/src/main/jit/Makefile

# VPATH = @srcdir@
# srcdir = @srcdir@
# top_srcdir = @top_srcdir@

# top_builddir = ../../..
# subdir = src/main/jit
# R_HOME = $(top_builddir)

# include $(top_builddir)/Makeconf

# LLVM_CPPFLAGS = # TODO: should be set by configure.
# LLVM_CXXFLAGS = # TODO: should be set by configure.
# ALL_CPPFLAGS = $(LLVM_CPPFLAGS) $(R_XTRA_CPPFLAGS) $(CPPFLAGS) $(DEFS)
# ALL_CXXFLAGS = $(LLVM_CXXFLAGS) $(R_XTRA_CXXFLAGS) $(CXXFLAGS) $(DEFS)

# SOURCES = \
# 	EmitIR.cpp \
# 	Globals.cpp \
# 	JIT.cpp \
# 	Runtime.cpp \
# 	TypeBuilder.cpp
# HEADERS = $(SOURCES:.cpp=.hpp)
# DEPENDS = $(SOURCES:.cpp=.d)
# OBJECTS = $(SOURCES:.cpp=.o)

# distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)
# DISTFILES = Makefile.in Makefile.win $(SOURCES) $(HEADERS)

# all: Makefile Makedeps R

# Makefile: $(srcdir)/Makefile.in \
#   $(top_builddir)/config.status \
#   $(SOURCES)
# 	@cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

# Makedeps: Makefile $(DEPENDS)
# 	@cat $(DEPENDS) >> Makefile
# 	@touch $@

# R : Makefile
# 	@$(MAKE) Makedeps
# 	@$(MAKE) libjit.a

# libjit.a: $(OBJECTS)
# 	rm -f $@
# 	$(AR) cr $@ $(OBJECTS)
# 	$(RANLIB) $@

# mostlyclean: clean
# clean:
# 	@-rm -f Makedeps *.d *.o *.lo *.a
# distclean: clean
# 	@-rm -f Makefile
# maintainer-clean: distclean

# install install-strip uninstall TAGS info dvi check:

# distdir: $(DISTFILES)
# 	@for f in $(DISTFILES); do \
# 	  test -f $(distdir)/$${f} \
# 	    || ln $(srcdir)/$${f} $(distdir)/$${f} 2>/dev/null \
# 	    || cp -p $(srcdir)/$${f} $(distdir)/$${f}; \
# 	done

# ## Automagically generated dependencies:

